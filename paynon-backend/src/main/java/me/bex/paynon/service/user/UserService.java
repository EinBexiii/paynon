package me.bex.paynon.service.user;

import com.google.api.client.googleapis.auth.oauth2.GoogleIdToken;
import me.bex.paynon.core.database.entities.user.PrivateUserEntity;
import me.bex.paynon.core.database.entities.user.PublicUserEntity;
import org.apache.catalina.LifecycleState;

import java.util.Set;

public interface UserService {

    /**
     * Get PrivateUser by the google id
     * @param googleId GoogleId from the User
     * @return {@link PrivateUserEntity}
     */
    PrivateUserEntity getPrivateUserEntityByGoogleId(String googleId);

    /**
     * Creates a user from google data
     * @param payload Google Payload generated by the token
     * @return {@link PrivateUserEntity}
     */
    PrivateUserEntity createUser(GoogleIdToken.Payload payload);

    /**
     * Get PrivateUser by Email
     * @param email Email from the User
     * @return {@link PrivateUserEntity}
     */
    PrivateUserEntity getUserByEmail(String email);

    /**
     * Payment Process
     * @param email Email of the User
     * @param targetUserId ID of the target User
     * @param amount Amount to pay
     * @return {@link PrivateUserEntity}
     */
    PrivateUserEntity payment(String email, long targetUserId, int amount);

    /**
     * Get all PublicUsers from the Database
     * @return {@link Set<PublicUserEntity>}
     */
    Set<PublicUserEntity> getAllUsers();
}
